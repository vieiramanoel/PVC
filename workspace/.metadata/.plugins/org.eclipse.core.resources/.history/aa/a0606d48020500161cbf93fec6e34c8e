#include "PointClickDistance.hpp"

int main(int argc, char** argv){
	cv::Mat image;
    PointClickDistance windowClick;
    CvCapture* capture = cvCreateCameraCapture(1);

    windowClick.gettingROI();
    windowClick.getDistance();
    cv::VideoCapture cap(1);
    if (!cap.isOpened()) return -1;
    CvMat *intrinsic = (CvMat*)cvLoad("Intrinsics.xml");
    CvMat *distortion = (CvMat*)cvLoad("Distortion.xml");
    cap >> image;
    IplImage* mapx = cvCreateImage( cvGetSize(image), IPL_DEPTH_32F, 1 );
	IplImage* mapy = cvCreateImage( cvGetSize(image), IPL_DEPTH_32F, 1 );
	cvInitUndistortMap(intrinsic,distortion,mapx,mapy);

	// Run the camera to the screen, showing the raw and the undistorted image.

	cvNamedWindow( "Undistort" );
	while(image)
	{
		IplImage *t = cvCloneImage(image);
		cvShowImage( "Raw Video", image );          // Show raw image
		cvRemap( t, image, mapx, mapy );            // Undistort image
		cvReleaseImage(&t);
		cvShowImage("Undistort", image);            // Show corrected image

		//Handle pause/unpause and ESC
		int c = cvWaitKey(15);
		if(c == 'p')
		{
			c = 0;
			while(c != 'p' && c != 27)
			{
				c = cvWaitKey(250);
			}
		}
		if(c == 27)
			break;

		image = cvQueryFrame( capture );
	}

        return 0;
}
